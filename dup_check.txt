from collections import Counter

for idx, row in df_all.iterrows():
    tuples_list = row["key_pair_tuple"]
    
    # --- Check overall tuple uniqueness ---
    tuple_counts = Counter(tuples_list)
    dup_tuples = [t for t, count in tuple_counts.items() if count > 1]
    if dup_tuples:
        print(f"\nRow {idx} has duplicate tuples in 'key_pair_tuple':")
        for dup in dup_tuples:
            print(f"  Tuple {dup} occurs {tuple_counts[dup]} times")
        print("Row details:")
        print(row)
    
    # --- Check uniqueness of the second element ---
    second_elems = [t[1] for t in tuples_list]
    second_counts = Counter(second_elems)
    dup_seconds = [sec for sec, count in second_counts.items() if count > 1]
    if dup_seconds:
        print(f"\nRow {idx} has duplicate second elements in 'key_pair_tuple':")
        for sec in dup_seconds:
            # Get all tuples with this duplicate second element
            associated_tuples = [t for t in tuples_list if t[1] == sec]
            # The output shows each duplicate second element and its corresponding tuples,
            # making the first elements clear.
            print(f"  Second element {sec} appears in tuples: {associated_tuples}")
        print("Row details:")
        print(row)
